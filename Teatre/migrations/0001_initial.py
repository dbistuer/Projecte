# Generated by Django 4.0.2 on 2022-05-14 12:27

import Teatre.validators
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cinema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adress', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=100)),
                ('telephone', models.CharField(max_length=15, validators=[Teatre.validators.PhoneValidator])),
                ('cardNumber', models.CharField(max_length=50, validators=[Teatre.validators.IBANValidator])),
                ('DNI', models.CharField(default='', max_length=9, validators=[Teatre.validators.DNIValidator])),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(null=True, upload_to='')),
                ('name', models.CharField(max_length=50)),
                ('gender', models.CharField(max_length=50)),
                ('duration', models.IntegerField()),
                ('synopsis', models.CharField(default=' ', max_length=500)),
                ('classification', models.CharField(default='X', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('capacity', models.IntegerField(default=50, validators=[django.core.validators.MinValueValidator(50)])),
                ('number', models.IntegerField()),
                ('Cinema', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Teatre.cinema')),
            ],
            options={
                'unique_together': {('number', 'Cinema')},
            },
        ),
        migrations.CreateModel(
            name='MovieCinemaRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_movie', models.DateField(null=True, verbose_name='date_movie')),
                ('Cinema', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Teatre.cinema')),
                ('Movie', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Teatre.movie')),
                ('Room', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Teatre.room')),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now=True)),
                ('price', models.FloatField(max_length=4)),
                ('Client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Teatre.client')),
                ('Movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Teatre.movie')),
                ('Room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Teatre.room')),
            ],
            options={
                'unique_together': {('date', 'Client', 'Movie', 'Room')},
            },
        ),
    ]
